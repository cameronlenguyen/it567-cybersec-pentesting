# portscanner.py
# created by Cameron LeNguyen using modified open source code on https://www.pythonforbeginners.com/code-snippets-source-code/port-scanner-in-python
# Oct. 2018

#!/usr/bin/env python
import socket
import subprocess
import sys
import argparse
from datetime import datetime

# construct argument parse and parse the arguments
argp = argparse.ArgumentParser()
argp.add_argument("-t", "--target", required=True,
	help="hosts to target")
argp.add_argument("-p", "--ports", required=True,
	help="ports to scan")
argp.add_argument("-h", "--help", required=False,
	help="shows user guide")

# Clear the screen
subprocess.call('clear', shell=True)

# Prompt for input
remoteIP = input("Enter IP of remote host to scan: ")

# Print a nice banner with information on which host we are about to scan
print ("-" * 60)
print ("Please wait, scanning remote host", remoteIP)
print ("-" * 60)

# Check what time the scan started
t1 = datetime.now()

# Using the range function to specify ports (here it will scan all ports specified)

try:
	for port in range(1,1025):
		sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		result = sock.connect_ex((remoteIP, port))
		if result == 0:
			print ("Port {}:	Open".format(port))
		sock.close()
		
except KeyboardInterrupt:
	print ("Scan cancelled manually")
	sys.exit()
	
except socket.gaierror:
	print ("IP could not be resolved. Exiting")
	sys.exit()
	
except socket.error:
	print ("Couldn't connect to server")
	sys.exit()
	
# Check time again
t2 = datetime.now()

total = t2 - t1
print ("Scanning completed in: ", total)